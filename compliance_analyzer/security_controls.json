{
  "controls": [
    {
      "control-id": "ac-10",
      "control-name": "Concurrent Session Control",
      "description": "Limit the number of concurrent sessions for each {{ insert: param, ac-10_odp.01 }} to {{ insert: param, ac-10_odp.02 }}.",
      "status": "gap",
      "explanation": "Based on the provided context, MinIO employs robust authentication and session management mechanisms, including use of tokens, IAM policies, and multi-factor authentication. However, there is no explicit mention or configuration of limiting the number of concurrent sessions per user or identity. The summaries and configuration files do not reveal any inherent or configurable enforcement of concurrent session limits, which is required by control AC-10. This represents a gap because without such limits, a user or identity could establish unlimited concurrent sessions, potentially increasing risk exposure from session hijacking or resource exhaustion attacks.",
      "configuration": ""
    },
    {
      "control-id": "ac-12",
      "control-name": "Session Termination",
      "description": "Automatically terminate a user session after {{ insert: param, ac-12_odp }}.",
      "status": "applicable but only satisfied through configuration",
      "explanation": "MinIO implements session-based access using temporary security credentials issued by its Security Token Service (STS), with session durations configurable between 15 minutes to 365 days (default one hour). This effectively enforces automatic session termination by expiring these temporary credentials. However, the automatic session termination is not inherently enforced by MinIO's core codebase but is dependent on configuration parameters that define session duration and expiration in the STS and authentication subsystems. Hence, the control is applicable and satisfied only through proper configuration of session lifetime parameters and IAM policies.",
      "configuration": "Session duration and automatic termination are configured via MinIO STS parameters and IAM policies. For example, in STS configurations, session duration can be set through environment variables or API parameters controlling temporary credential lifetime, typically ranging from 900 seconds (15 minutes) to 31536000 seconds (365 days). Relevant configuration locations include:\n\n- STS session duration settings in environment variables or server options (e.g., `MINIO_STS_SESSION_DURATION` environment variable or equivalent flags).\n- IAM policy definitions that enforce session expirations.\n- STS AssumeRole and AssumeRoleWithWebIdentity API requests specify durationSeconds parameter.\n\nThese configurations are typically managed through server startup environment variables or administrative API calls rather than a static JSON/YAML file, but they are essential to ensure sessions terminate automatically after the defined duration."
    }
  ],
  "timestamp": "2025-04-30T15:49:41.319219"
}