{
  "controls": [
    {
      "control-id": "ac-10",
      "control-name": "Concurrent Session Control",
      "description": "Limit the number of concurrent sessions for each {{ insert: param, ac-10_odp.01 }} to {{ insert: param, ac-10_odp.02 }}.",
      "status": "gap",
      "explanation": "The reviewed MinIO service documentation and configuration summaries do not provide evidence of explicit enforcement of limits on the number of concurrent sessions per user, client, or identity. While there are rate limiting controls on API calls (e.g., maxClients throttling), these limit concurrent requests rather than concurrent authenticated sessions. Session management is described in terms of authentication tokens and timeouts, but no configuration or code excerpts indicate a mechanism that restricts the number of active sessions per identity or user. This represents a gap relative to the AC-10 control requirement to limit concurrent sessions.",
      "configuration": "No configuration or code snippets found that specifically implement or configure concurrent session limits per user or identity. Existing rate limiting applies to requests, not sessions."
    },
    {
      "control-id": "ac-12",
      "control-name": "Session Termination",
      "description": "Automatically terminate a user session after {{ insert: param, ac-12_odp }}.",
      "status": "applicable but only satisfied through configuration",
      "explanation": "The MinIO service supports temporary security credentials and session-based access through its Security Token Service (STS), which issues credentials with configurable expiration durations (from 15 minutes to 365 days, defaulting to one hour). These credentials inherently expire after their validity period, effectively terminating sessions automatically. However, this session termination behavior depends on the correct configuration of session durations and policies, which are set by administrators or users when assuming roles or requesting tokens. There is no indication in the provided code or documentation that sessions are forcibly terminated based on idle timeouts or other automatic termination criteria beyond credential expiration. Thus, the control is applicable but relies on proper configuration of session durations.",
      "configuration": "Session duration for temporary credentials is configurable via STS APIs and identity provider integrations. For example, in docs/sts/client-grants.md and docs/sts/assume-role.md, sessions can be specified between 15 minutes and 365 days. Configuration is typically managed through environment variables, API parameters, or IAM policies that set the 'DurationSeconds' parameter in AssumeRole calls. This configuration can be found in the STS API usage and client grant invocation steps as documented, and controlled by administrators when issuing temporary credentials. No specific config file or line number was identified in the reviewed artifacts for session timeout settings, as session termination is managed programmatically within the STS service implementation and external IAM policy configurations."
    }
  ],
  "timestamp": "2025-04-30T15:47:04.738733"
}